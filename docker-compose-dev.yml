# Before compose up run this "docker network create caddy"
# aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 155635619005.dkr.ecr.us-east-2.amazonaws.com
version: "3"
services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine

    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    depends_on:
      - smarthealthui
  smarthealthui:
    image: 155635619005.dkr.ecr.us-east-2.amazonaws.com/githubactionapptest:react_demo_image
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    restart: always
    networks:
      - caddy
    labels:
      com.centurylinklabs.watchtower.enable: true
      caddy.tls: "internal"
      caddy: testncare.com
      caddy.reverse_proxy: "{{upstreams 3009}}"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ecrConfig.json:/config.json
      - helper:/go/bin
    environment:
      - HOME=/
      - PATH=$PATH:/go/bin
      - AWS_REGION=us-east-2
      - WATCHTOWER_DEBUG=true
      - WATCHTOWER_TRACE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true

    # labels:
    #   com.centurylinklabs.watchtower.enable: true
    command: --interval 30
networks:
  caddy:
    external: true

volumes:
  caddy_data: {}
  helper:
    external: true
